---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

# This task only runs locally and will set up instances
- name: Tasks to run local
  hosts: localhost
  tags: ['never', 'local']
  environment:
    OS_CLOUD: "{{ cifmw_bootstrap_cloud_name }}"
  tasks:
    - name: Run tasks/non_zuul instead of 'main'
      ansible.builtin.include_role:
        name: bootstrap
        tasks_from: non_zuul
      # tags: always


- name: Add hosts to skip VM creation
  hosts: localhost
  tags: ['never', 'inject']
  tasks:
    # todo: check file exists
    - name: Read the content of the inventory file
      ansible.builtin.slurp:
        src: inventory.yaml
      register: inventory_file_content

    - name: Decode the inventory content
      ansible.builtin.set_fact:
        decoded_inventory: "{{ inventory_file_content.content | b64decode | from_yaml }}"

    - name: Add hosts
      ansible.builtin.add_host:
        name: "{{ item }}"
        ansible_ssh_user: "{{ decoded_inventory[item]['ansible_ssh_user'] }}"
        ansible_host: "{{ decoded_inventory[item]['ansible_host'] }}"
        groups: "{{ decoded_inventory[item]['groups'].keys() }}"
        nodepool: "{{ decoded_inventory[item]['nodepool'] }}"
      loop: "{{ decoded_inventory.controller.groups.all }}"

# Note: this may not be required in Zuul
- name: Bootstrap playbook
  # Don't gather facts automatically because that will trigger
  # a connection, which needs to check the remote host key
  gather_facts: false
  tags: always
  hosts: nodepool
  roles:
    - role: "bootstrap"
      when: false
  tasks:
    - name: Check known_hosts for {{ inventory_hostname }}
      delegate_to: localhost
      ansible.builtin.command:
        cmd: ssh-keygen -F {{ ansible_host }}
      register: has_entry_in_known_hosts_file
      changed_when: false
      ignore_errors: true

    - name: "Ignore host key for the first run on {{ inventory_hostname }}"
      when: has_entry_in_known_hosts_file.rc == 1
      ansible.builtin.set_fact:
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"

    - name: Write the instance host key to known hosts
      delegate_to: localhost
      changed_when: true
      when: has_entry_in_known_hosts_file.rc == 1
      ansible.builtin.command: "ssh-keyscan -H {{ ansible_host }} >> ~/.ssh/known_hosts"

    - name: Create CI directory on all hosts
      become: true
      ansible.builtin.file:
        path: "/etc/ci/env"
        state: directory
        mode: '0755'


- name: Tasks to run on ansible controller
  hosts: controller
  tags: always
  environment:
    OS_CLOUD: "{{ cifmw_bootstrap_cloud_name }}"
  tasks:
    - name: Run tasks/in_zuul.yaml instead of 'main'
      ansible.builtin.include_role:
        name: bootstrap
        tasks_from: in_zuul
      tags: always
