---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

# todo
# - name: Validate the input data
#   ansible.builtin.import_tasks: network-validate.yml

- name: Load network environment definition from file
  ansible.builtin.include_tasks: load-input.yml

- name: Replace cloud config with new application credential
  when: cifmw_bootstrap_create_application_credential | bool
  ansible.builtin.include_tasks: in_zuul/create-application-credential.yml

- name: Create the crc based CI environment
  environment:
    OS_CLOUD: "{{ cifmw_bootstrap_cloud_name }}"
  block:
    - name: Create the networks and subnets
      ansible.builtin.include_tasks: in_zuul/create-network-resources.yml
      loop: "{{ crc_ci_bootstrap_networking.networks | dict2items }}"
      loop_control:
        label: "{{ network_item.key }}"
        loop_var: network_item

    - name: Create the routers
      ansible.builtin.include_tasks: in_zuul/create-router.yml
      loop: "{{ crc_ci_bootstrap_networking.routers | default({}) | dict2items }}"
      loop_control:
        label: "{{ router_item.key }}"
        loop_var: router_item

    - name: Create ports
      vars:
        instance_id: "{{ nodepool_instance_id_map[instance_item.key] }}"
      ansible.builtin.include_tasks: in_zuul/create-attach-ports.yml
      loop: "{{ crc_ci_bootstrap_networking.instances | dict2items }}"
      loop_control:
        label: "{{ instance_item.key }}"
        loop_var: instance_item

    - name: Save networking data to file
      vars:
        content:
          ci_bootstrap_os_networks: "{{ ci_bootstrap_os_networks }}"
          ci_bootstrap_os_port_map: "{{ ci_bootstrap_os_port_map }}"
          ci_bootstrap_os_mac_addr_map: "{{ ci_bootstrap_os_mac_addr_map }}"
      become: true
      ansible.builtin.copy:
        dest: "{{ cifmw_bootstrap_ci_infra_dir }}/os-net-info.yml"
        content: "{{ content | to_nice_yaml }}"
        owner: root
        group: root
        mode: '0644'

  always:
    - name: Remove cloud_secrets file
      ansible.builtin.file:
        path: "{{ cifmw_bootstrap_clouds_yaml }}"
        state: absent
