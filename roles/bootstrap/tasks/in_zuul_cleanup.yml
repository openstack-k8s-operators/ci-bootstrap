---
# Copyright Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Load network environment definition from file
  when: "crc_ci_bootstrap_networking is not defined or
         crc_ci_bootstrap_networking | length == 0"
  block:
    - name: Check for network environment definition file
      ansible.builtin.stat:
        path: "{{ cifmw_bootstrap_net_env_def_path }}"
      register: _net_env_file_stat

    - name: Slurp network environment definition file
      when: "_net_env_file_stat.stat.exists"
      register: _ci_bootstrap_net_env_slurp
      ansible.builtin.slurp:
        src: "{{ cifmw_bootstrap_net_env_def_path }}"

    - name: Save ci boostrap networking info
      ansible.builtin.set_fact:
        crc_ci_bootstrap_networking: "{{ _ci_bootstrap_net_env_slurp['content'] | b64decode | from_yaml }}"
        cacheable: true

- name: Create openstack config dir
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/.config/openstack/"
    state: directory
    mode: '0755'

- name: Make sure that we have the expected openstacksdk
  ansible.builtin.pip:
    name: "openstacksdk>=1.0"

- name: Check for cleanup skip flag file presence
  ansible.builtin.stat:
    path: "{{ ansible_user_dir }}/crc-ci-bootstrap-skip-cleanup"
  register: crc_ci_bootstrap_skip_file_stat

- name: Cleanup the CI environment networking
  environment:
    OS_CLOUD: "{{ cifmw_bootstrap_cloud_name }}"
  when: >-
    not (
      (crc_ci_bootstrap_skip_cleanup | default(false) | bool) or
      (crc_ci_bootstrap_skip_file_stat.stat.exists | bool)
    )
  block:
    - name: Generate clouds config from cloud_secrets secret
      ansible.builtin.template:
        src: clouds.yaml.j2
        dest: "{{ ansible_user_dir }}/.config/openstack/clouds.yaml"
        mode: "0600"

    - name: Get the networks
      openstack.cloud.networks_info:
        name: "{{ network_item.key }}-cifmw-{{ zuul.build[:8] }}"
      register: _networks_out
      loop: "{{ crc_ci_bootstrap_networking.networks | dict2items }}"
      loop_control:
        label: "{{ network_item.key }}"
        loop_var: network_item

    - name: Cleanup networks
      ansible.builtin.include_tasks: cleanup-network.yml
      loop: "{{ _networks_out.results | map(attribute='networks') | list }}"
      loop_control:
        loop_var: network_item

  always:
    - name: Remove clouds.yml secret
      ansible.builtin.file:
        path: "{{ cifmw_bootstrap_clouds_yaml }}"
        state: absent
