---
- name: Create the default network
  openstack.cloud.network:
    state: present
    name: "{{ crc_ci_bootstrap_network_name }}"
    port_security_enabled: false
    mtu: "{{ default_network_config['mtu'] }}"
  register: crc_ci_bootstrap_private_net_create_out

- name: Create subnet - ipv4
  openstack.cloud.subnet:
    state: present
    network_name: "{{ crc_ci_bootstrap_private_net_create_out.network.id }}"
    name: "{{ crc_ci_bootstrap_subnet_name }}"
    cidr: "{{ default_network_config.range }}"
  register: crc_ci_bootstrap_private_subnet_create_out

- name: Set yaml returned data for further usage
  ansible.builtin.set_fact:
    crc_ci_bootstrap_private_subnet_create_yaml: "{{ crc_ci_bootstrap_private_subnet_create_out | from_yaml }}"
    crc_ci_bootstrap_private_net_create_yaml: "{{ crc_ci_bootstrap_private_net_create_out | from_yaml }}"
    cacheable: true

- name: Create router and gateway
  when: default_network_config.router | default(true) | bool
  block:
    - name: Create router
      openstack.cloud.router:
        name: "{{ crc_ci_bootstrap_router_name }}"
        network: "{{ default_network_config.router_net | default('public') }}"
        interfaces:
          - "{{ crc_ci_bootstrap_private_subnet_create_out.subnet.id }}"
      register: crc_ci_bootstrap_private_router_create_out

    - name: Set router yaml returned data for further usage
      ansible.builtin.set_fact:
        crc_ci_bootstrap_private_router_create_yaml: "{{ crc_ci_bootstrap_private_router_create_out | from_yaml }}"
        cacheable: true

